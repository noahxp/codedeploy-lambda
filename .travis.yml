sudo: required

language: node_js
node_js:
- 12

branches:
  only:
  - master

# travis runtime environment from here or settings. : https://docs.travis-ci.com/user/environment-variables/
env:
  global:
  - ZIP_FILE="lambda-$TRAVIS_BUILD_NUMBER-$TRAVIS_COMMIT.zip"

  # travis-ci secure doc : https://docs.travis-ci.com/user/encryption-keys/
  # before install travis , first install ruby & gem
  # $ gem install travis
  # $ travis encrypt SOMEVAR="secretvalue"

  # AWS_ACCESS_KEY_ID_DEV
  - secure: ""
  # AWS_SECRET_ACCESS_KEY_DEV
  - secure: ""
  # AWS_ACCESS_KEY_ID_STG
  - secure: ""
  # AWS_SECRET_ACCESS_KEY_STG
  - secure: ""
  # AWS_ACCESS_KEY_ID_PROD
  - secure: "xwdXMaSgO/iKr+W0sfnle9PCDGltve5g3B03amDnFqEelto4Pnk6xZbiLwh62mJktJTO3kN+DsgkI+U4nc3Ue5RQ4aoGJsFxnFcT5/2g2iU1XAqmXni4uxevqBJ8v1xYvU2LIIPwWN7SCaJUI1hemaXAwCx85efDqtakqssdAwmDkMGwwsIHwFyH59K2G7v4Ona03MFkLs9btyuLFlHpRh4o2cqPwgpvWALSEVpGRWkUuJdLTUzTMe/FnUOt3q+S2BFcmULchNC9jnPoUF/HD/yUxcQ/vL4lhkqYrWUjwhb9ijaTeVjXL0VO0PPl21HhKebv+WCkC8veCn1gAl5m19I8S1fNdB2E2TPs+F9POuixYTAt0QA09h7VlBCBeZIBDDUJHKmOCXRz1s5tzgwuWBI/ZQMAr6QPIu84MvdfO5rRadLNmFpFZtBz1DBBSVjS277lqVYrDLKAh0pkXgz3qwatkBGqTMHChhNkenLlAh2iDWRuKV4nyfpjj1DbNssvwdE3ocUUOnuJfxXAscOlCm/u0/paUKHQ+NtRg6MESJx7C+NQZT5r/UXPctaKVtHSHU0ThFtqxEotfY9SITOHz2KHOXuIsOyvWAVZ/jErB9lX4h66zLlX3Lr5ikptZ8oyxNX/4l1sweTZJKseTLBhA9nXsxddQt/1qksjGujJs88="
  # AWS_SECRET_ACCESS_KEY_PROD
  - secure: "ULSNFLgVv2ICiHivjE/qd2ko6ZaSs0fiQbO8zT95Zg/BXAOmSQEXz7ngUUNxouGW941RIWAosjJ7M3LYfYQYMiMsdA0mHlCsRxG1sG3mRqI+C5TpSmlAVTt0L0Jl5QHpdDpoMOk7VCFleKg9iTd647DdUHMSWdcyJUi6xLUjKOL2ysiDF8tbKriPHTzWi4OsuR2LhLcOCABoL3dxxKNIxlSoYahWZYmw6DE4GjEZODxyIEklpNLN0nj6AeZdQhQW4hOjzmV2VmC1DER9BlkUrKUT9Srq3YLnHeIBqcFx/CD96kBlxcvezeTUyLtA7JeUINpaSMMySogTAnZhsXxbNu7IXTIev76Gwo6C/Hr1JdbK5Bcyenf/6Bwucb6e8tl/BdPF2zttN13OJAxaJyv8k1v8jKMBpabUFVr3PILRTM0gxJZLaeO4SmGDyN5oYPM+Ys+vp4CwNzp718xap10JozVp7Z5JIdBzaAHNH+xLDBrW+yl2OTkv2volctcHOyBQD57H10KKOue5/AkIivlO2NTw+DkeC0XoCTTCD5xDd0x0dRpWAP6PMdZDCmSMNRhCfyKczvkm9g6BKf1b2/DuwU8OVj7NKZDRxBqQ1RQD6EPFNZI4LOzyYqKolcKvOCDfwAb0fgVBGb79brcfz1aheDhQaJDnmWb4oNlWMNFj4EM="

  # global variables
  - AWS_ACCESS_KEY_ID=''
  - AWS_SECRET_ACCESS_KEY=''
  - AWS_REGION='ap-northeast-1'
  - CODEDEPLOY_APP_NAME=''
  - CODEDEPLOY_GROUP=''
  - AWS_ACCOUNT_ID=''


# notification - https://docs.travis-ci.com/user/notifications
# notifications:
#   email:
#     recipients:
#       - one@example.com
#       - other@example.com
#     on_success: never # default: change
#     on_failure: always # default: always
# integration to slack , setup on slack travis-ci app
notifications:
  email:
    on_failure: always
    on_success: never
  slack:
    rooms:
    - secure: "HUUCwevc8Tr+x/zkAJy7crFwrfftHJK53VUfainBs9lyrOxqIwkVNBwJm5Fx6FPvBR2uYdFg+Wbx5ImESGtouGUT2DpJQLNEU8ln6nq69RJw6IXxCcWsT61W4uiY3etoMKhYp+z1oPZNsms6NdI90tthCclbczAiT3i8FBDZP6TS+lhh+bnbu/+bjUOjakmc4wTeTLxo0XKX34FOXqy7OmhMAVZWyPXFT66nXFeephn118xx2vCWSLrGTZJNsVxmQUlNU9UL70Q7G7xhkAawDCdmc0ooWv/Zr5auvLcSJlJ+rNQKRG0W3yuqrntu+cEEQd4MIbUSRfzn1xLL7D7E066WX0JQbCP9aaNtJsIzc1JbFi0FYfExEpqaQVz7pUwWlrt7PYJOLRIK2wCCrP+mOjP4kL9QHZzBao7OHmHiIhJHO7/hrx9jW89zFR9VqNRtGo13l//ViG5TPFSYAIcfLIQ63LCoTtzTz/nDLmgIxjHh1mGndG96DBDad3wL5DOIBfZ2I803bIQ3GYsN307PcAoUKBFoER4JSqolcbDLNJETsEFU3YJt9sESpu6ikxIALOTrWJo0g+0hMh5L3Uz0d2qNQgfCMb0A+WdMZiZvynjxmtNKBR1tk7eKfcrlbkHt5GaPQ88jiXE7n/AmI46AqLGwxByIfNIdb2n7GPNl2Cs="

cache:
  npm: true




# build lifecycle - https://docs.travis-ci.com/user/customizing-the-build/
# (OPTIONAL) Install apt addons
# (OPTIONAL) Install cache components
# before_install
# install
# before_script
# script
# (OPTIONAL) before_cache (for cleaning up cache)
# after_success or after_failure
# (OPTIONAL) before_deploy
# (OPTIONAL) deploy
# (OPTIONAL) after_deploy
# after_script

# set -e : when error stop build.
before_install:
- set -e
- echo `date +"%Y-%m-%d %H:%M:%S"`
- echo $TRAVIS_BRANCH
- if [[ $TRAVIS_BRANCH == "dev" ]]; then
    AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_DEV;
    AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_DEV;
    S3_BUCKET='';
    CODEDEPLOY_APP='';
    CODEDEPLOY_GROUP='';
    AWS_ACCOUNT_ID='';
  fi
- if [[ $TRAVIS_BRANCH == "staging" ]]; then
    AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_STG;
    AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_STG;
    S3_BUCKET='';
    CODEDEPLOY_APP='';
    CODEDEPLOY_GROUP='';
    AWS_ACCOUNT_ID='';
  fi
- if [[ $TRAVIS_BRANCH == "master" ]]; then
    AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PROD;
    AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PROD;
    S3_BUCKET='afgsfhdyur5joi868682333';
    CODEDEPLOY_APP='a1-Lambda-CodeDeploy';
    CODEDEPLOY_GROUP='lambda';
    AWS_ACCOUNT_ID='796957138374';
  fi

# install:
  # - pip install awscli

# put testing scripts here
script:
  - echo 'script step...'

after_success:
  - cd "$TRAVIS_BUILD_DIR";
  - mkdir "$TRAVIS_BUILD_DIR/zip";
  - zip -r "$TRAVIS_BUILD_DIR/zip/$ZIP_FILE" *;
  - cp "$TRAVIS_BUILD_DIR/zip/$ZIP_FILE" "$TRAVIS_BUILD_DIR/zip/lambda.zip";


deploy:
- provider: S3
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  region: $AWS_REGION
  local_dir: $TRAVIS_BUILD_DIR/zip
  bucket: $S3_BUCKET
  skip_cleanup: true
  on:
    all_branches: true


- provider: lambda
  function_name: demo-lambda
  region: $AWS_REGION
  role: !Sub arn:aws:iam::${AWS_ACCOUNT_ID}:role/lambda_basic_execution
  runtime: nodejs12.x
  handler_name: handler


# - provider: codedeploy
#   access_key_id: $AWS_ACCESS_KEY_ID
#   secret_access_key: $AWS_SECRET_ACCESS_KEY
#   region: $AWS_REGION
#   bucket: $S3_BUCKET
#   key: $ZIP_FILE
#   bundle_type: zip
#   application: $CODEDEPLOY_APP
#   deployment_group: $CODEDEPLOY_GROUP
#   wait_until_deployed: true
#   on:
#     all_branches: true
